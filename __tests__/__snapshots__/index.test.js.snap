// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`universal-import await import() should receive a thennable without calling .then: await import() should receive a thennable without calling .then 1`] = `

async ({ page }) => await import(\`../components/\${page}\`);

      ↓ ↓ ↓ ↓ ↓ ↓

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

async ({ page }) =>
  await (0, _universalImport2.default)(
    () =>
      Promise.all([
        import(
          /* webpackChunkName: 'components/[request]' */
          \`../components/\${page}\`
        ),
      ]).then((proms) => proms[0]),
    false
  );


`;

exports[`universal-import babelServer: true: babelServer: true 1`] = `

import("./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import disableWarnings: true: disableWarnings: true 1`] = `

import("./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import dynamic import (string template + relative paths): dynamic import (string template + relative paths) 1`] = `

import(\`../../base/\${page}\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "../../base/\${page}",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'base/[request]' */
        \`../../base/\${page}\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`../../base/\${page}\`),
  resolve: () => require.resolveWeak(\`../../base/\${page}\`),
  chunkName: () => \`base/\${page}\`,
});


`;

exports[`universal-import dynamic import (string template - dynamic at 1st segment): dynamic import (string template - dynamic at 1st segment) 1`] = `

import(\`./\${page}\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./\${page}",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: '[request]' */
        \`./\${page}\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`./\${page}\`),
  resolve: () => require.resolveWeak(\`./\${page}\`),
  chunkName: () => \`\${page}\`,
});


`;

exports[`universal-import dynamic import (string template with multiple nested folders): dynamic import (string template with multiple nested folders) 1`] = `

import(\`./base/\${page}/nested/{$another}folder\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./base/\${page}/nested/{$another}folder",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'base/[request]' */
        \`./base/\${page}/nested/{$another}folder\`
      ),
    ]).then((proms) => proms[0]),
  path: () =>
    _path2.default.join(__dirname, \`./base/\${page}/nested/{$another}folder\`),
  resolve: () => require.resolveWeak(\`./base/\${page}/nested/{$another}folder\`),
  chunkName: () => \`base/\${page}/nested/{$another}folder\`,
});


`;

exports[`universal-import dynamic import (string template with nested folder): dynamic import (string template with nested folder) 1`] = `

import(\`./base/\${page}/nested/folder\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./base/\${page}/nested/folder",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'base/[request]' */
        \`./base/\${page}/nested/folder\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`./base/\${page}/nested/folder\`),
  resolve: () => require.resolveWeak(\`./base/\${page}/nested/folder\`),
  chunkName: () => \`base/\${page}/nested/folder\`,
});


`;

exports[`universal-import dynamic import (string template): dynamic import (string template) 1`] = `

import(\`./base/\${page}\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./base/\${page}",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'base/[request]' */
        \`./base/\${page}\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`./base/\${page}\`),
  resolve: () => require.resolveWeak(\`./base/\${page}\`),
  chunkName: () => \`base/\${page}\`,
});


`;

exports[`universal-import existing chunkName + strips out unknown things: existing chunkName + strips out unknown things 1`] = `

import(
  /* webpackFakeProperty1: "Lazy" */
  /* webpackChunkName: 'Bar'*/
  /* webpackFakeProperty3123: /foobar/ */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import existing chunkName + webpackPrefetch: existing chunkName + webpackPrefetch 1`] = `

import(
  /* webpackChunkName: 'Bar'*/
  /* webpackPrefetch: true */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackPrefetch: true */

        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import existing chunkName + webpackPreload: existing chunkName + webpackPreload 1`] = `

import(
  /* webpackChunkName: 'Bar'*/
  /* webpackPreload: true */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackPreload: true */

        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import existing chunkName + webpackmode + webpackInclude + webpackExclude + webpackIgnore: existing chunkName + webpackmode + webpackInclude + webpackExclude + webpackIgnore 1`] = `

import(
  /* webpackChunkName: 'Bar'*/
  /* webpackMode: "Lazy" */
  /* webpackInclude: /*.js$/ */
  /* webpackExclude: /(?!*test.js)$/ */
  /* webpackIgnore: true */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackIgnore: true */

        /* webpackExclude: /(?!*test.js)$/ */

        /* webpackInclude: /*.js$/ */

        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import existing chunkName + webpackmode + webpackInclude + webpackExclude: existing chunkName + webpackmode + webpackInclude + webpackExclude 1`] = `

import(
  /* webpackChunkName: 'Bar'*/
  /* webpackMode: "Lazy" */
  /* webpackInclude: /*.js$/ */
  /* webpackExclude: /(?!*test.js)$/ */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackExclude: /(?!*test.js)$/ */

        /* webpackInclude: /*.js$/ */

        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import existing chunkName + webpackmode + webpackInclude: existing chunkName + webpackmode + webpackInclude 1`] = `

import(
  /* webpackChunkName: 'Bar'*/
  /* webpackMode: "Lazy" */
  /* webpackInclude: /*.js$/ */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackInclude: /*.js$/ */

        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import existing chunkName + webpackmode: existing chunkName + webpackmode 1`] = `

import(/* webpackChunkName: 'Bar'*//* webpackMode: "Lazy" */"./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import existing chunkName: existing chunkName 1`] = `

import(/* webpackChunkName: 'Bar' */"./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'Bar' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Bar",
});


`;

exports[`universal-import multiple imports: multiple imports 1`] = `

import("one"); import("two"); import("three");

      ↓ ↓ ↓ ↓ ↓ ↓

var _path4 = _interopRequireDefault(require("path"));

var _universalImport4 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport4.default)({
  id: "one",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'one' */
        "one"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path4.default.join(__dirname, "one"),
  resolve: () => require.resolveWeak("one"),
  chunkName: () => "one",
});
(0, _universalImport4.default)({
  id: "two",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'two' */
        "two"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path4.default.join(__dirname, "two"),
  resolve: () => require.resolveWeak("two"),
  chunkName: () => "two",
});
(0, _universalImport4.default)({
  id: "three",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'three' */
        "three"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path4.default.join(__dirname, "three"),
  resolve: () => require.resolveWeak("three"),
  chunkName: () => "three",
});


`;

exports[`universal-import no chunkName + webpackPrefetch: no chunkName + webpackPrefetch 1`] = `

import(
  /* webpackPrefetch: true */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackPrefetch: true */

        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import no chunkName + webpackPreload: no chunkName + webpackPreload 1`] = `

import(
  /* webpackPreload: true */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackPreload: true */

        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import no chunkName + webpackmode + webpackInclude + webpackExclude + webpackIgnore: no chunkName + webpackmode + webpackInclude + webpackExclude + webpackIgnore 1`] = `

import(
  /* webpackMode: "Lazy" */
  /* webpackInclude: /*.js$/ */
  /* webpackExclude: /(?!*test.js)$/ */
  /* webpackIgnore: true */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackIgnore: true */

        /* webpackExclude: /(?!*test.js)$/ */

        /* webpackInclude: /*.js$/ */

        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import no chunkName + webpackmode + webpackInclude + webpackExclude: no chunkName + webpackmode + webpackInclude + webpackExclude 1`] = `

import(
  /* webpackMode: "Lazy" */
  /* webpackInclude: /*.js$/ */
  /* webpackExclude: /(?!*test.js)$/ */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackExclude: /(?!*test.js)$/ */

        /* webpackInclude: /*.js$/ */

        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import no chunkName + webpackmode + webpackInclude: no chunkName + webpackmode + webpackInclude 1`] = `

import(
  /* webpackMode: "Lazy" */
  /* webpackInclude: /*.js$/ */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackInclude: /*.js$/ */

        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import no chunkName + webpackmode: no chunkName + webpackmode 1`] = `

import(
  /* webpackMode: "Lazy" */
  "./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackMode: "Lazy" */

        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import static import (import as function with relative paths + nested folder): static import (import as function with relative paths + nested folder) 1`] = `

const obj = {component:()=>import(\`../components/nestedComponent\`)}; ()=> obj.component()

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

const obj = {
  component: () =>
    (0, _universalImport2.default)({
      id: "../components/nestedComponent",
      load: () =>
        Promise.all([
          import(
            /* webpackChunkName: 'components/nestedComponent' */
            \`../components/nestedComponent\`
          ),
        ]).then((proms) => proms[0]),
      path: () =>
        _path2.default.join(__dirname, \`../components/nestedComponent\`),
      resolve: () => require.resolveWeak(\`../components/nestedComponent\`),
      chunkName: () => \`components/nestedComponent\`,
    }),
};

() => obj.component();


`;

exports[`universal-import static import (relative paths + nested folder): static import (relative paths + nested folder) 1`] = `

import(\`../components/nestedComponent\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "../components/nestedComponent",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'components/nestedComponent' */
        \`../components/nestedComponent\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`../components/nestedComponent\`),
  resolve: () => require.resolveWeak(\`../components/nestedComponent\`),
  chunkName: () => \`components/nestedComponent\`,
});


`;

exports[`universal-import static import (string template + relative paths): static import (string template + relative paths) 1`] = `

import(\`../../base\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "../../base",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'base' */
        \`../../base\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`../../base\`),
  resolve: () => require.resolveWeak(\`../../base\`),
  chunkName: () => \`base\`,
});


`;

exports[`universal-import static import (string template): static import (string template) 1`] = `

import(\`./base\`)

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./base",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'base' */
        \`./base\`
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, \`./base\`),
  resolve: () => require.resolveWeak(\`./base\`),
  chunkName: () => \`base\`,
});


`;

exports[`universal-import static import (with file extension): static import (with file extension) 1`] = `

import("./Foo.js")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo.js",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'Foo' */
        "./Foo.js"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo.js"),
  resolve: () => require.resolveWeak("./Foo.js"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import static import (with relative paths): static import (with relative paths) 1`] = `

import("../../Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "../../Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'Foo' */
        "../../Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "../../Foo"),
  resolve: () => require.resolveWeak("../../Foo"),
  chunkName: () => "Foo",
});


`;

exports[`universal-import static import: static import 1`] = `

import("./Foo")

      ↓ ↓ ↓ ↓ ↓ ↓

var _path2 = _interopRequireDefault(require("path"));

var _universalImport2 = _interopRequireDefault(
  require("babel-plugin-universal-import/universalImport")
);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

(0, _universalImport2.default)({
  id: "./Foo",
  load: () =>
    Promise.all([
      import(
        /* webpackChunkName: 'Foo' */
        "./Foo"
      ),
    ]).then((proms) => proms[0]),
  path: () => _path2.default.join(__dirname, "./Foo"),
  resolve: () => require.resolveWeak("./Foo"),
  chunkName: () => "Foo",
});


`;
